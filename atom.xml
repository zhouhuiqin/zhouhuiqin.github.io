<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ms Zhou</title>
  
  <subtitle>A light heart lives long.</subtitle>
  <link href="https://zhouhuiqin.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhouhuiqin.github.io/"/>
  <updated>2021-08-17T01:37:31.518Z</updated>
  <id>https://zhouhuiqin.github.io/</id>
  
  <author>
    <name>Ms Zhou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub Hexo - hexo指令</title>
    <link href="https://zhouhuiqin.github.io/2021/08/16/GitHub%20Hexo%20-%20hexo%E6%8C%87%E4%BB%A4/"/>
    <id>https://zhouhuiqin.github.io/2021/08/16/GitHub%20Hexo%20-%20hexo%E6%8C%87%E4%BB%A4/</id>
    <published>2021-08-16T12:25:19.000Z</published>
    <updated>2021-08-17T01:37:31.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：记录下常用的hexo指令和踩过的坑~</p><a id="more"></a></blockquote><h4 id="hexo指令"><a class="markdownIt-Anchor" href="#hexo指令"></a> Hexo指令</h4><h5 id="1-新建一篇文章"><a class="markdownIt-Anchor" href="#1-新建一篇文章"></a> 1、新建一篇文章</h5><ul><li>方法</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo <span class="keyword">new</span> [layout] &lt;title&gt;</div></pre></td></tr></table></figure><ul><li>栗子：新建本篇文章（标题包含空格时，需要使用引号括起来）</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo <span class="keyword">new</span> <span class="string">"GitHub Hexo - hexo指令"</span></div></pre></td></tr></table></figure><h5 id="2-清除缓存文件"><a class="markdownIt-Anchor" href="#2-清除缓存文件"></a> 2、清除缓存文件</h5><ul><li>方法与栗子</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div></pre></td></tr></table></figure><h5 id="3-生成静态文件"><a class="markdownIt-Anchor" href="#3-生成静态文件"></a> 3、生成静态文件</h5><ul><li>方法与栗子①（g，generate的缩写）</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure><ul><li>栗子②：文件生成后立即部署网站</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g -d</div></pre></td></tr></table></figure><ul><li>栗子③：文件生成时日志打印（此时，在博客根目录下可见debug.log文件）</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g --debug</div></pre></td></tr></table></figure><h5 id="4-启动本地服务预览"><a class="markdownIt-Anchor" href="#4-启动本地服务预览"></a> 4、启动本地服务（预览）</h5><ul><li>方法与栗子（默认情况下，访问网址为： <code>http://localhost:4000/</code>）</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure><h5 id="5-部署网站"><a class="markdownIt-Anchor" href="#5-部署网站"></a> 5、部署网站</h5><ul><li>方法与栗子</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo d</div></pre></td></tr></table></figure><p><i>指导文档：<a href="https://hexo.io/zh-cn/docs/commands" target="_blank">Hexo官方指令</a>    </i></p><h4 id="坑坑坑坑"><a class="markdownIt-Anchor" href="#坑坑坑坑"></a> 坑坑坑坑</h4><h5 id="坑一hexo-g生成的静态文件为0kb"><a class="markdownIt-Anchor" href="#坑一hexo-g生成的静态文件为0kb"></a> 坑一：hexo g生成的静态文件为0kb</h5><h6 id="现象"><a class="markdownIt-Anchor" href="#现象"></a> 现象</h6><p>hexo g --debug，可见错误如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">(node:3908) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency</div><div class="line">(Use `node --trace-warnings ...` to show where the warning was created)</div><div class="line">(node:3908) Warning: Accessing non-existent property 'column' of module exports inside circular dependency</div><div class="line">(node:3908) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency</div><div class="line">(node:3908) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency</div><div class="line">(node:3908) Warning: Accessing non-existent property 'column' of module exports inside circular dependency</div><div class="line">(node:3908) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency</div></pre></td></tr></table></figure><h6 id="原因"><a class="markdownIt-Anchor" href="#原因"></a> 原因</h6><p>node版本过高，与旧hexo不兼容；且非稳定版本</p><p>原使用node版本：14.17.3</p><p>需降低node版本：12.22.5</p><p>👉<a href="https://nodejs.org/zh-cn/about/releases/" target="_blank">node稳定版</a></p><h6 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h6><p>使用稳定版本的node，如果不想卸载原版本的话（会有其他应用依赖高版本node的情况），可以安装nvm，实现多版本的node切换。</p><p>指导文档：<a href="https://blog.csdn.net/gitchatxiaomi/article/details/108965496" target="_blank">解决项目node版本不支持，windows多版本的node切换</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">nvm ls               <span class="comment">// 查看已安装node版本</span></div><div class="line">nvm install vXX      <span class="comment">// 安装对应XXX版本的node</span></div><div class="line">nvm uninstall vXX    <span class="comment">// 卸载对应XXX版本的node</span></div><div class="line">nvm use xxx          <span class="comment">// 选择使用XXX版本</span></div></pre></td></tr></table></figure><h5 id="坑二修改文件夹名称小写大写提交后名称依旧未变"><a class="markdownIt-Anchor" href="#坑二修改文件夹名称小写大写提交后名称依旧未变"></a> 坑二：修改文件夹名称（小写↔大写），提交后名称依旧未变</h5><h6 id="原因-2"><a class="markdownIt-Anchor" href="#原因-2"></a> 原因</h6><p>git 命令默认的配置中忽略了文件名的大小写</p><h6 id="解决-2"><a class="markdownIt-Anchor" href="#解决-2"></a> 解决</h6><p>修改git的配置文件，让git执行时不要忽略大小写的修改。</p><ol><li>步骤1：进入到博客根目录</li><li>步骤2：找到.deploy_git文件夹（隐藏文件夹，度娘查如何显示文件）</li><li>步骤3：找到.git文件夹</li><li>步骤4：修改config文件里的 ignorecase = true 为 ignorecase = false，保存文件</li><li>步骤5：删除.deploy_git文件夹内的所有文件，并push到 Github 仓库（确保你的远程仓库内没有任何文件）</li><li>步骤6：执行hexo指令：hexo clean、hexo g -d</li></ol><p>指导文档：<a href="https://www.dazhuanlan.com/coolspeed/topics/1376322" target="_blank">Hexo部署到Github后文件夹名大小写引起的问题</a></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言：记录下常用的hexo指令和踩过的坑~&lt;/p&gt;&lt;/blockquote&gt;</summary>
    
    
    
    <category term="博客" scheme="https://zhouhuiqin.github.io/categories/博客/"/>
    
    
    <category term="hexo" scheme="https://zhouhuiqin.github.io/tags/hexo/"/>
    
    <category term="github" scheme="https://zhouhuiqin.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>趣丸测试工程师社招面试</title>
    <link href="https://zhouhuiqin.github.io/2021/07/20/%E8%B6%A3%E4%B8%B8%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%A4%BE%E6%8B%9B%E9%9D%A2%E8%AF%95/"/>
    <id>https://zhouhuiqin.github.io/2021/07/20/%E8%B6%A3%E4%B8%B8%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%A4%BE%E6%8B%9B%E9%9D%A2%E8%AF%95/</id>
    <published>2021-07-20T01:24:01.000Z</published>
    <updated>2021-08-17T02:48:00.023Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="92eaff642998294b2e63a81de0a79d1503f882671837cbd10ceadddf7e8bc851">b361acfaa8304bfc99f0082d76a0013b58d5b5633da4a2de3835077b54f371c9078f26f171b2dab11d37288d1f477c130a446d9afd0bb1d96b83f9557d6f8c8d862cd60075b82a32bb42fd4a6de16fb7157744066f68eb20fae964b6a42812caa00b76cf92be51f2c0b7db219524313e6a5ddfea195557ceca68edd2b4171d0f1fe7c3bab6a647c285e62e29d77e5c24c4f29745fbe94706b2d436b2c8d84bd4fa5527817b10ddfe6fbb5b70c022d094865eeb754a2c74bfe98558118f59e4b6bd99cc5e8806595d0c1d1d9f6efa8041077bfcc653ce51fe839f258fcbde588eaeda7ba073a1ba3e9b7754ff0a1d617805817aca151eb31580d873b66e5d55664eabd2d8b7ed25bf2672a63039a045be89a5e4b4dbc96d45f97bf80a3f52db09b6fb9d00e330a6a2ebdd1b4c52b1c89dbc416fd96031442a7f497dd3af07dd1e9a9b5b04af6fe6647e28264f00f6b20192c924686c99815259a5dc026284859dff277a25fbd3f80db4123226f8b19be26166353a83dc6b60791fa96ee4995f8fa65adca555c6f6da40c9bdccdb7b85dcbf2ce65fcb079cd1c1eb5d293292ae61701531e70291c6fb91343e9f5309c752a18def8bce3e8fd51a6b2728b06dc3f197e5c6397303b0ff10a588d99dbf9a9784acfc10efb1cc62d2adc014257132d1d789c538eba09a6219410245fa6a72458693dcb0edf1d251faaa78695633e71f56167f6316c3f6d2d607dab77881b8bc06b9a7811d21d0192f5948b00acda76021fb19d727e5a393b890117684b865a8f240a615d030fd1b780e2636d4c15a98b1e9208a1a36937f39a70627b62ce2d9de918eb12697f04d1d95ca3f0cc084a11adf82b870dde2b1c7109e9fc7f1e1700fb4bd6f87bb3ea5312d2385aad9c40a74f038db26e8394fbae140cb0e4d43837d5a40b05358de28f3077da8a4ad77ddee7c5eecbc1febff8ba0e75d70f1fc1fbd2c3f40863af88b43322733924206aa0d9d83ca2a18b4af1992481d40721db6a406a7c6b6893cb2e94390f2cf059b179656312ba1d0de1975eb51dcbdd39173795dcce6b0e827948787befeac162864aaaa1ef9aa9c22652f20bc1a3053131582ab387b4a551ef518de936355f406be98c409a675de993d05f87718832869d7a97edb799e87c9b35fed71bdaf029dd770f8d67aa9d608ac2fe5b6baa890a36d5b028221ca0a980a4d3e89bcea399548098da68d48fe79bcbfd96e1f7aa435d5c58b1821ad04deb5dcbef91721d0d82f31c84ed7f268c2c1745527367b5599633c4693ad324aa8049a206775f619e50a2409e163287ea2d9e192dcf9c1f10851025fd5b93353fdaf5c77a33bbc91b16ac433dbfac75dd819d2fb8a96bfd966d32c64e942be2ffdf840e3b7066ea11fdc1dda5c44ac8c0540d931ec3afb4b4cb440d2b9c5d437761d97c9a4eb3ebfb97b656c4083b082850a3ef303ba9cc3d8aef75fd5d26b96f72ce3a50916a2ab0d86b26de7ea9c41e72d57a9a019527bacce2f8ea8f58a9a0fc0bbdc3b3a2c1afce29851f104caf76e565e15e5030f0b35eb15e1433442c7dc3d05b28105c68fac0fd7449f20bb3e6d32c242aafc53fdc6cf5d43e374314ca66b8d8b96635204518e5dcb8079f3dd5b84c9f0f1329f4fd010282d789a303bd16f87de8d2dba4e054a4ef31ac22f18bd35b2e080c0b959494138926a6bc6a98ba1e016ebc5b1e19f2fc60ba82ed4d031473934eb0ea84ed94d75a44c2a19d0fdb8455cfd908a437fa99c2b91a60591c526f513872808efa99ebfee71b461fbf1dc767614d887eedaece0d619d0ebe33fb989e66828b12a6405c8724d7192909c38c33c1dc9b2b8bad7d7cb30c99db5283ff73f2ae6394f09bffbd82481f06e09de70bb20469667b93082c285079a2a77c337142e64273a0fc3b67ab19afd9a7bbfc5fc95f5dd5ac735a45d7310a2487a9125056b52d2a2ac6f3d576c1dd9113603b5fffec6d0ef92450d59292a7ebb191e23983cf740393d936780e0ee2661d62103141a25da4be273cf8ffdb66210149a115def14d5379778a2a60b49d26d588760bff2d3c8cee236788ac57395ada41ca4c5d6550ec57b1a6ae1c6843cdb23395aa78bd5c743b68c7952696852453fc988ecc034b6470535ed61abfb626a737ee9cb3a5df4aaa4718d0e32dd860db76cd7d5aeb42120c663b8060131d96c9e5e3e282f75ad28e2f069ac8dba7e90018f9b804a7403fb5cd5fa67f0876e3c86278e15f9320b68150266a78402f07c9f33d39456534519dc26acf3f48a62b79e7724b81f690f0074699b14c19c93f8ba0f8f0f5fdd124780047e903106d6af39f3521c65b99a7f930191a79d681667113400d5bca1f380b8b64d0a564173c60d3376680a270ba6cb251f8f7434419382de69573794443d907f8ea5253dda95d12a9bee289b3dd34d121a1d533061d00a9b2f381a630b0a3a8b45bb11cb8a933cb5628a208364df8cc1c3583f2b7483cd274b0433c4ff146aa38c3f82df9f6e8fe9a4cb84fcb713b5c3045f4716f721304cf03f3ede01ea268d414af6696527b44868487fec9ffd62cef2d6cf6fb9e8317f9f732cbe478bc11a9673dac6e4e5fa906310a2499b9918cd1e3d1c937cca02bbaa49fcaf67fdb74feb762bfc094cb6cb30b3d1d09e2fe1d6e03f851869c66dd5500cc178ba85818136f8f60d1c02058e66d3fd74928f01d5a2408710b5773d4273164b6fdd68d61b686ab7bc266e368bf0aaba81a120ec15b0085dc828de24aa166d8362388ca545e170ab06c78a7344154bf1c19975191f801f597dc0f1beab8479b2dcb13801b8812d17b5a797d0e3bca9f9a1326759a70047985e981269bbc6b78a0b95f554c1e0692d9f24a5402e00456a12169e8ad45e7bcc955b894350b1ff90862ce4a8c7aba35167e71d2e8062238592a9a3cb6830045a83246fcb700d38561f4688af5f2c99c5716937662ba92d5c410e8f157f989da668d1eda2f13da4ef0ca0092708646de298e05e2e07d781d8f96ef43e615cddcda24dcc08ab085bbeb2c7bee7c470163f2c035bebea6f9d6a54092e44c77dfd554654ab9582b19e2aa363e5ba37000af765ff3a028fafc7ba5811eea249ffaa629cc4484737dcda70afdbae5f8d1d2648b693c7c974b4786fefddd2cf0ad6ba6c51b92568ad1a3958661bc5a9ac788dd0f3f9fe3c2456aebf964193b5308cbedcdc07c6e02ce801e7a604b7922f9f8eabf5b3e47caa4f2e09c322926d1e6bcf1c5ca672f33f7396d9338c0159ffc04302068b5126a157299161c1971966b0e3cf50c070cc4309417961aa5c4ee0d027fafe5675f41c094839ce12f56cb6f517ff6fc2f227aea2645b5a605e3f407fa8281d117fc3d13b669473576fdbdf54ee1fe2113d18216ad0320c922b2edba98895f3657f71a801e8aa39ffacc245bf77edcd6c21c4a0d656de609b5d54c9f49cd5ce5db1e28f4cd1902e2c15cd5191db7e0e00a2ea2581c452ad29fb9b7ada470a07022ccca7f8928a4e913d046db83dfce2e6e9625be1d11725b9d2e94cb073f67d99b1b8250e882c926abb513b151562af46bcd60cfca5d0055ac62c738d6d43552d272269c79499a4a16bfc2972ecfabe890ae08854df7a937fbcc96f76c64aea8aead66ffe49b7f336d70d7af195648ba4c5c89c618105b33249a6affa569a0e1288ce66d8519eeaeda4d0a99eec9f0b32a4110d5defb43ba532c5813a0f2b42389f01490fd8d4b89e594e74ec09d8259a016f4b3bc6d73a033749b4806fbea520390a3c687605cb1f07ec002c5fbe870c4de1db8c560f6b9a8798c38ae1a77c0b4799c1a229512ca0ac82531a98f56b02947caeb8d0991ad84e5cf9b4e6a2af5e05c488f76688c9937be745677d73d46a7a237323635a6a72b7575bff8e073caebda81906a875a0582ef7e9a2c18d294c02aee1bd43cd092e8f38561753f61f950daf240d5fcdfd0ea7e21c116364f16f05795980746707814d5294cb3ddb914f99d3c88faed0415a537942</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面筋" scheme="https://zhouhuiqin.github.io/categories/面筋/"/>
    
    
    <category term="面筋" scheme="https://zhouhuiqin.github.io/tags/面筋/"/>
    
  </entry>
  
  <entry>
    <title>荔枝测试工程师笔试</title>
    <link href="https://zhouhuiqin.github.io/2021/07/08/%E8%8D%94%E6%9E%9D%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%AC%94%E8%AF%95/"/>
    <id>https://zhouhuiqin.github.io/2021/07/08/%E8%8D%94%E6%9E%9D%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%AC%94%E8%AF%95/</id>
    <published>2021-07-08T07:17:09.000Z</published>
    <updated>2021-08-17T02:47:48.365Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="38d110a7d0f748d6506d663516fdc13c36d34be240ded461f20630c9df58d10c">313ee6941448df6a2d380de8408c73ee7db09af88c9b78481f449a5a5a1389a771e05c68dc381eb52b771a0eb43bd8f24d7454632af83eb050ff454611c67d784b89b66b96656d4ccf27ca38bbd9807251c7e92daf3caf64018a6fce6cb475681f901d22baffa5f63bfd6ee0d1c6ec329f02ba5f71d57a39f72d9121dc57e6e216a7055e352981ced4ed3ce6977e718744f816dc8e27fd15b27c7288477ea836d9650d145d0e3dd92ce9d9feea8b2ceda311a9ddbfb7bb1667b270c62a95ca3d0ed16867d2a8422a666e69d6e8f97e3c9823e922857a75f036633482bde88c5427c1bbca451309a53564ebfb652dcc9da18332320871eeeab5bf09452e1923e5c7d1136c0bef502693290a6d2a00cca9924d3b657509ee09e5825371cf8f78446d4e7f63da09349072882dc983b1d097ea47f53067fc6756988a7b257e0df2ecc0a416b44f4f91c368dfd7fe77879769700b9e71da8e9d949dc1a42688f5aec039aaf24c5682bcf3b977c088efeeb84ad94057a1e4e993bca381bb76207c5cf0e0730bdf7d01e7ba906431f1a0d10b57f7cf40b89bd483ea0c611f75b36c5eb7402b8ce3eb205b0938291ae3b3e0fcf10a0fd221f77c9211008acd6e1d4977f10f1d08336529c1faf44b39c416f970ede92fa95567c30d1cf0114f26a38a87efd4a031d24191d53f9ea1e66d2a084f8d97edc2238c1e96f633396968f46779aa141949f61450e0f9d039d69b5e7cc3fbdd02f246536fcac70a20069665622a804b915b979b6cc1d9a613f95658b93150b98d4f29919a2aebffcde2647c919f806cc63f92d880cac1aa80be7e58e2d8abdc4ac213d981ec8ebac16ff1f692a31402d4130ed525693794acfbe4ceceb0ada236247c458be25f4807b6bcc024d9fb52052fc6a04b2ce78490aff8c11527a190c239cb462b4074346d70d7b9490981ce79942502861e6565680a531318f83c1f4e0aefe35c2bd74f358b28a42a49df59f2281d77ea7635e2cb4e02a70d9476cb08bcebecd0200e8dd1fd5777a08b0443fb98c8211292e8e3a2b772b3ce01b4d2c648716248a18b3b6a54477e3791a5532e2c89606112cf7ad52d6e276f89990a56160be4552e19f52928e92fdf236a4235e5fa60684694305a76b2d8024861d5777d447f91690392817d1319552e079b784abdc3c85bef37a308bf8409f13c0acd79e9533526bc8150027514e34baf8151805575572f452970216339a6b0d8bde9b1b7a84dc6d5f9401706dc98dade2bd19732322906eec2f5166aa65f720b62e3c61d616181169c5655f896c3655757816a1a147f7ce4f2846d397ab790f3a38a84e358c1717b7940055e798068126bb14e2ffec481b824a469b16f05c66604a4419bd1dd2bcf38dc62dbb88db9b185c598cf016866aeda28433a3e2b1b4f0018c51daa905a67984b95b5eb744cd0a92d96869af3c15c3546e23c95380e78211782c724ba54c943ba11d8352bf7ca4a6f8e6031c11339610790bc84f147472af3c2ab1bae0b077e95e638b52355f769d19256e6b307144c47b46f366c6b702ecd410684429844af2affbc7a77cc737a24338bd4f0a7fdc4134d2f85298dfb44e4dd5ac023b35905a74b7ec0f7c67421de9ee020300150f76c837e7e862927f44551fcbdae352f8a58a5c476ad8b07</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="笔试" scheme="https://zhouhuiqin.github.io/categories/笔试/"/>
    
    
    <category term="笔试" scheme="https://zhouhuiqin.github.io/tags/笔试/"/>
    
  </entry>
  
  <entry>
    <title>SheIn测试工程师社招面试</title>
    <link href="https://zhouhuiqin.github.io/2021/07/06/SheIn%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%A4%BE%E6%8B%9B%E9%9D%A2%E8%AF%95/"/>
    <id>https://zhouhuiqin.github.io/2021/07/06/SheIn%E6%B5%8B%E8%AF%95%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%A4%BE%E6%8B%9B%E9%9D%A2%E8%AF%95/</id>
    <published>2021-07-06T07:15:01.000Z</published>
    <updated>2021-08-17T02:53:31.483Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="356438d186ca98edbc5edfbfc3045184a14027f6059bcfe8d852bd15212c115f">4088bdd0470660656969a028ff9639948d75a3a6902a525862b2b75d07b1ca9d0b02c8b9887e5a338ddd7adb7c87ff09937eda7c0ebab1f7f09f32654e32a11a53f03750acaf58f09396e0f7d472a7f87c89dd3999788b68d24104ad6c191653a722628b392b12278818dc9ad9eb49f7643d09b5a05e9a3dad51a9641c09e8cb314d936db0f1ac2b8fc95727fee9c77e1189334237baeab8cd3a362821486c9e648437be805816febc605c22c0ede883b16ff3f4a45e7a2d943edac1645efeaa1899e0d02e8b033c0fd2d23647dc4ed5cc96d8a21bfc7dbce2bc72ccb2747ebd430fd913b6e4552855a3f48ab4d2e6574f111a7fec066ae21c9e1d3039ee8c6450b76f2a0a923a5583773a3dac8c131254358776505870da5f8b212bc507228a999064e8ba40329ca59effdb835dc2713b7cd20aaba04e6cde15d6d0b9af23e46d9ebf02e6da38145c3b19d766fa5b732c9a8595a679f0e05ebfbad08483c9ae5f1c5cbc01dbef212fb9efddb35245982b37ec9980370b7f3556ae25c9530a9cadcf3895eebb167c7081dbb12636a6bd7c2cbf2295c38ad01193f47e79c6401d2305cd81e715eb00bd186e25397bd70883afbf6b163f7133106d6ad44fe0614866830516107cab2f52de77176e58a4d17864fccdf50b54e66870229d6b26014b7a126e5413f653bcd4ee0014c01e2f05a01696bdae37648704aa2fe15cdf6d7b4bb5fa4b4f8de69e36b1737188d5714f17329f85ffbb276671d468f919f6ea0678b8f09cd7e361a824688797091af58010b30acda74339d89f14cef521e94ae17ed2bc4d362cb805ba3e66adc3627faf3b85d2ba5333268a2e98015926571d1223c71864df4e14d0bd9559ce7990ece69c8a520aa3ebaf6d7c9433e66fd406815e11ae6f44a82459ad7b057c2f427ad878f185782640fb50c4fae084ebc98f8823875015035939892c0c590ec79a70178e516bd838ba2d73892c50b5e2bb21732bd082106c011df97f1c0220b68e8567a8a4315270b97bca1a7c6fa483463f5bed93a7e25241e92d5772eb9395cf2207e45d69a8340c8aa7ba2f74aa16fe805590f1b74ef5b27846d7d70455369d1d06940f6c09afad7adcf06038e5683153a196955aba26296a79ba62d9329f698d1b6477a12f9091b06968a6863c329c8ea6b3085167bea31f518f2e803a6cbf9dfe5ff2b537f2eb35e1f98ab27dbd29efa9867f50c440704e37d12da2a7b3f00c445b8e116506a2c33879acd4fd804da4542c19bbd8cbbce1409f46ab242b3888e7382832568770829a967788e00a4a9e5e9a285a82fb842fbe83dc909fda553fa6a597dc4bf332f5e4eb03234a3e0a1aebf945f40a50ac80fab5bc41024bcb881e25fdd388f69779d2ac76a901c981eb1309d1a7de3e04cc3ee8b6afbf00594c91e5b805b356fd243726d3f70c9665dcfcc7e125e15193134396cbcff3c5c5262f19f522b514b010173af3adca164b5e9e06c9843e57b65774edd3c3af0494a1a7b99500f9777f646a95950438b1bda3dcb38f3e301da057d971635471681ce1520bdfe9400992c093dcf261f1b4d8b5d35a50fe055815e67f50a58395492d2cefa7bc0d1b019851e3df1f83e5adf7b68b94e3ece004577126b65e92cda357005f311155b63ea21aee33d12ae88712c5f0b672c3bcf9218276fba4c1800ab4a47370461bb6416d621072b3b0fedb2e3ad1fa54d48783e674a55bede65b69e9923f5cb25bedd94f13a59f5b4948d83973a6e2fcdee42ad39c4ff7eca339443fd5da9e1573f777e534c63c54758070ce66b505bc16b1975db320e3c70065be93645cec1eff7936c0010c12e19c4fc6d3d38495e6f35bc5f7c6d3cd9840f479f85241863923bec74a2a386d931222d7b41bd48adfbc1ad7a2f5778227ff950648021b215f153dc57858bd7c6001a9b2d68085e1890fa8f0b1b1ce8158a72e0471fb2810f76f8d15d19edc59e90df5d6479eca035f9c193a0b65ddbcc6719f36e4dda4eeb3d74cbb83ac886c1051f0637f3ed62c10f3e2910bb3a69418db2deff99f16e685f4f4db7096e10eb06c335305eb09027143d1513721fa6c935ef6e4552969bf56439f37f5fe819a405687d8bd3d27ff4f9285c4a1c13b3216b0aa252a418f05247b438bd2951b0f759d94e872ce47e6daf336253ee200edd83d0f1105ffda50059047d91def508983dbd49c4cdb1b15e3bc5fe4638f9d5ecd83669ac0abbf394cab3652b0227b5b4a9c8d1bd59c4da63e21a97cc5aa8be97b026e8f6eb1f6ee6cddf49e1fbc24ca9883b1ee3b9a3e46527f85a8997d9e6c449f0159457e652b36ba9943b02a7364fd3b0c7489021d32ee040976040257d9363968e328b92d38976e50db625752e868d3c7871db4fa5962dcca4ce5d78c0eca3e39e360202fdd23ab8cbf02b6cba260c05fd0fd629b58ebc45fdd16cf30ee9381ba82782495ed9719331e727e057d42a8b03dbada7c890c36c4b96dfa38220942532bbc8630446d3cb16ddf29d47245092a33175388457533d9977312cc675db9454a8973871f356ee86d76c5a2240dd272495c01e6201590a8e25446e243cb8e81e745b8d330ce4e4901ce3bc7924bcf9d89ab0ab6e4be16d68e3e456887b00617e294604436b882a43e7fc3668e642d6e867ecbd7fa4db9a7a52a9729b1c528799f3c12b5731acde7437d11aa652e7562fa0dd641b8c6a4e0f2a324f8b1fb27ad770fbcdacdc069a6216af842bf99db2dbf8d1c1fdbdbd1e5bd7eced72ab2ff1a80bf9985dd18e775ea6587af6aabf5b8afaab35f59a597a3cac30d831d4c4085ee8f021d74b723c24631a139ed0ca2c57e6f96960f2dfe9073320795c5e6d4d796fbf1f172463f08db29d3677f5b41e4e13814c7ab454501a0c13cb03ba9da12358228737ca91acab0d8c2814e5f7c956564a6b5416ace5bbc2181a9ebb75807ccb5da115055e217f95c443b3395d4f16dbd8949b4bf5cb8a82d35aa9107867a5f614ca0b562f826f5b3e61d4890410e02547aef2a10ef9827ce75b3fc9811c236308140972a80214a98107a4926eb8c38e3ea2fefc221ac501548a23c522c708f844b3745e735b27288587c2eca6a6fdb1083e8e1d64970d379bb1ea694eb53550d4f823a8dce1dcf3de16ad96b938510b1a366e884dd4f96384b25e655b640f709e3aa3bac87dccc1e88d2300ce0883d34156388282fc2117b06692ba5d1b2705868c45d667c8c405b6768e93e766fe67a712647d031100d10ab7fca44ad1736c29054fc8432ea0d8ae44185789c80b2708530b156fb1034bb30052337256d18986db0a19f1bed17466c8c0611564ece2ac4b5fb67f3b33b25c914f03c78f579686b1f51bf6e04bf91921abc19abaafe9dd5bc871b603338d49856a40d99969ad52b4096610711c4a0d1f70e1bcb00d13e8486d540beb227be735d7850ba4a1116dd75b1e67fd9579fac28c486d190531590876ea87589cede7d4892dbfa6e31ecb1ae7165a5f3bc1d78bd3ba87251d313f22d</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="面筋" scheme="https://zhouhuiqin.github.io/categories/面筋/"/>
    
    
    <category term="面筋" scheme="https://zhouhuiqin.github.io/tags/面筋/"/>
    
  </entry>
  
  <entry>
    <title>BurpSuite应用 - 抓包改包</title>
    <link href="https://zhouhuiqin.github.io/2021/07/06/BurpSuite%E5%BA%94%E7%94%A8%20-%20%E6%8A%93%E5%8C%85%E6%94%B9%E5%8C%85/"/>
    <id>https://zhouhuiqin.github.io/2021/07/06/BurpSuite%E5%BA%94%E7%94%A8%20-%20%E6%8A%93%E5%8C%85%E6%94%B9%E5%8C%85/</id>
    <published>2021-07-06T00:39:06.000Z</published>
    <updated>2021-07-06T00:46:29.264Z</updated>
    
    
    
    
    <category term="计算机网络" scheme="https://zhouhuiqin.github.io/categories/计算机网络/"/>
    
    
    <category term="BurpSuite" scheme="https://zhouhuiqin.github.io/tags/BurpSuite/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络基础知识（3）- 数据链路层</title>
    <link href="https://zhouhuiqin.github.io/2021/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%883%EF%BC%89-%20%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
    <id>https://zhouhuiqin.github.io/2021/06/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%883%EF%BC%89-%20%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</id>
    <published>2021-06-28T12:58:24.000Z</published>
    <updated>2021-06-28T12:59:42.450Z</updated>
    
    
    
    
    <category term="计算机网络" scheme="https://zhouhuiqin.github.io/categories/计算机网络/"/>
    
    
    <category term="网络基础" scheme="https://zhouhuiqin.github.io/tags/网络基础/"/>
    
  </entry>
  
  <entry>
    <title>Python Django框架 - jQuery应用 - 获取后台返回给到前端select</title>
    <link href="https://zhouhuiqin.github.io/2021/06/28/Python%20Django%E6%A1%86%E6%9E%B6%20-%20%E8%8E%B7%E5%8F%96%E5%90%8E%E5%8F%B0%E8%BF%94%E5%9B%9E%E7%BB%99%E5%88%B0%E5%89%8D%E7%AB%AFselect/"/>
    <id>https://zhouhuiqin.github.io/2021/06/28/Python%20Django%E6%A1%86%E6%9E%B6%20-%20%E8%8E%B7%E5%8F%96%E5%90%8E%E5%8F%B0%E8%BF%94%E5%9B%9E%E7%BB%99%E5%88%B0%E5%89%8D%E7%AB%AFselect/</id>
    <published>2021-06-28T11:29:44.000Z</published>
    <updated>2021-08-16T11:53:48.375Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：搭好环境后，开始准备将原exe上“连接设备”和“获取设备”这两功能先转移到web上。此案例讲的就是“获取设备”这一步，从构思-实现-踩坑-解决来讲述。</p></blockquote><a id="more"></a><h4 id="目的"><a class="markdownIt-Anchor" href="#目的"></a> 目的</h4><p>exe上的功能如下图：</p><p><img src="/2021/06/28/Python Django框架 - 获取后台返回给到前端select/exe%E4%B8%8A%E7%9A%84%E5%8A%9F%E8%83%BD.png" alt=""></p><p>功能1 连接设备（非本文重点）</p><p>功能2 获取设备，通过打开exe或点击刷新触发被控设备列表的刷新——该功能需转化到web上</p><h4 id="构思"><a class="markdownIt-Anchor" href="#构思"></a> 构思</h4><p>设备列表从哪来就从哪获取。是从数据库？还是后台查询服务返回？——后台返回</p><p>设备怎么展示？——下拉框元素展示</p><h4 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h4><p>1、目标页面刷新时，触发jQuery的get请求</p><p>2、通过get请求的url找到view层</p><p>2、view层实现获取设备的功能</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言：搭好环境后，开始准备将原exe上“连接设备”和“获取设备”这两功能先转移到web上。此案例讲的就是“获取设备”这一步，从构思-实现-踩坑-解决来讲述。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web项目" scheme="https://zhouhuiqin.github.io/categories/Web项目/"/>
    
    
    <category term="Python" scheme="https://zhouhuiqin.github.io/tags/Python/"/>
    
    <category term="Django" scheme="https://zhouhuiqin.github.io/tags/Django/"/>
    
    <category term="jQuery" scheme="https://zhouhuiqin.github.io/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Python Django框架 - jQuery基础</title>
    <link href="https://zhouhuiqin.github.io/2021/06/22/Python%20Django%E6%A1%86%E6%9E%B6%20-%20jQuery%E5%BA%94%E7%94%A8/"/>
    <id>https://zhouhuiqin.github.io/2021/06/22/Python%20Django%E6%A1%86%E6%9E%B6%20-%20jQuery%E5%BA%94%E7%94%A8/</id>
    <published>2021-06-22T06:49:04.000Z</published>
    <updated>2021-08-16T11:06:47.267Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：继上篇的Ajax学习，还记得里面提到的$.ajax嘛。发现是自己草率了，只搜索了后面几个英文，谁知它竟是 jQuery ajax() 方法。anyway，就当边学边用啦~</p></blockquote><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言：继上篇的Ajax学习，还记得里面提到的$.ajax嘛。发现是自己草率了，只搜索了后面几个英文，谁知它竟是 jQuery ajax() 方法。anyway，就当边学边用啦~&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web项目" scheme="https://zhouhuiqin.github.io/categories/Web项目/"/>
    
    
    <category term="Python" scheme="https://zhouhuiqin.github.io/tags/Python/"/>
    
    <category term="Django" scheme="https://zhouhuiqin.github.io/tags/Django/"/>
    
    <category term="jQuery" scheme="https://zhouhuiqin.github.io/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Python Django框架 - Ajax应用</title>
    <link href="https://zhouhuiqin.github.io/2021/06/19/Python%20Django%E6%A1%86%E6%9E%B6%20-%20Ajax%E5%BA%94%E7%94%A8/"/>
    <id>https://zhouhuiqin.github.io/2021/06/19/Python%20Django%E6%A1%86%E6%9E%B6%20-%20Ajax%E5%BA%94%E7%94%A8/</id>
    <published>2021-06-19T08:21:34.000Z</published>
    <updated>2021-06-22T06:50:38.512Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：当学到JavaScript时，老是有Ajax的名词跳出来，并且参考的案例代码也有$.ajax的词汇频现，这不是逼死个强迫症嘛，在JavaScript基础大致了解后，又看了下Ajax。</p></blockquote><a id="more"></a><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><ul><li>AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）</li><li>AJAX 不是新的编程语言，而是一种使用现有标准的新方法</li><li>AJAX 最大的优点是在不重新加载整个页面的情况下，可以与服务器交换数据并更新部分网页内容</li><li>AJAX 不需要任何浏览器插件，但需要用户允许JavaScript在浏览器上执行</li></ul><h4 id="工作原理"><a class="markdownIt-Anchor" href="#工作原理"></a> 工作原理</h4><p><img src="/2021/06/19/Python Django框架 - Ajax应用/AJAX%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt="AJAX工作原理"></p><h4 id="使用方式"><a class="markdownIt-Anchor" href="#使用方式"></a> 使用方式</h4><h5 id="1-创建-xmlhttprequest-对象"><a class="markdownIt-Anchor" href="#1-创建-xmlhttprequest-对象"></a> 1. 创建 XMLHttpRequest 对象</h5><ul><li>所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象<br><code>variable=new XMLHttpRequest();</code></li><li>老版本的 Internet Explorer （IE5 和 IE6）使用 ActiveX 对象<br><code>variable=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</code></li></ul><h5 id="2-向服务器发送请求"><a class="markdownIt-Anchor" href="#2-向服务器发送请求"></a> 2. 向服务器发送请求</h5><ul><li>栗子：get请求</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"/try/ajax/demo_get2.php?fname=Henry&amp;lname=Ford"</span>,<span class="literal">true</span>);  </div><div class="line">xmlhttp.send();</div></pre></td></tr></table></figure><ul><li>栗子：post请求</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">xmlhttp.open(<span class="string">"POST"</span>,<span class="string">"/try/ajax/demo_post2.php"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</div><div class="line">xmlhttp.send(<span class="string">"fname=Henry&amp;lname=Ford"</span>);</div></pre></td></tr></table></figure><p><img src="/2021/06/19/Python Django框架 - Ajax应用/%E5%90%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82.png" alt="向服务器发送请求"></p><h5 id="3-服务器响应"><a class="markdownIt-Anchor" href="#3-服务器响应"></a> 3. 服务器响应</h5><ul><li>来自服务器的响应并非 XML,使用 responseText 属性<br><code>document.getElementById(&quot;myDiv&quot;).innerHTML=xmlhttp.responseText;</code></li><li>来自服务器的响应是 XML,且需要作为 XML 对象进行解析，使用 responseXML 属性<br><code>document.getElementById(&quot;myDiv&quot;).innerHTML=txt;</code></li></ul><h5 id="4-onreadystatechange-事件"><a class="markdownIt-Anchor" href="#4-onreadystatechange-事件"></a> 4. onreadystatechange 事件</h5><p><i>使用场景：当需要执行一些基于响应的任务时，例如判断响应状态status为200</i></p><p><img src="/2021/06/19/Python Django框架 - Ajax应用/onreadystatechange%E4%BA%8B%E4%BB%B6.png" alt="onreadystatechange事件"></p><ul><li>普通：直接使用onreadystatechange 事件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadXMLDoc</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">var</span> xmlhttp;</div><div class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</div><div class="line">&#123;</div><div class="line"><span class="comment">//  IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span></div><div class="line">xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">&#123;</div><div class="line"><span class="comment">// IE6, IE5 浏览器执行代码</span></div><div class="line">xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">&#125;</div><div class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</div><div class="line">&#123;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"/try/ajax/ajax_info.txt"</span>,<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>进阶：使用回调函数<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> xmlhttp;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadXMLDoc</span>(<span class="params">url,cfunc</span>)</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</div><div class="line">  &#123;<span class="comment">// IE7+, Firefox, Chrome, Opera, Safari 代码</span></div><div class="line">  xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</div><div class="line">  &#125;</div><div class="line"><span class="keyword">else</span></div><div class="line">  &#123;<span class="comment">// IE6, IE5 代码</span></div><div class="line">  xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">  &#125;</div><div class="line">xmlhttp.onreadystatechange=cfunc;</div><div class="line">xmlhttp.open(<span class="string">"GET"</span>,url,<span class="literal">true</span>);</div><div class="line">xmlhttp.send();</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line">loadXMLDoc(<span class="string">"/try/ajax/ajax_info.txt"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></div><div class="line">&#123;</div><div class="line"><span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</div><div class="line">&#123;</div><div class="line"><span class="built_in">document</span>.getElementById(<span class="string">"myDiv"</span>).innerHTML=xmlhttp.responseText;</div><div class="line">&#125;</div><div class="line">&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h5 id="5-高级用法"><a class="markdownIt-Anchor" href="#5-高级用法"></a> 5. 高级用法</h5><ul><li>AJAX ASP/PHP 实例 —— 创造动态性更强的应用程序</li><li>AJAX Database 实例 —— 用来与数据库进行动态通信</li><li>AJAX XML 实例 —— 用来与 XML 文件进行交互式通信</li></ul><p><i>JavaScript调用的服务器页面ASP和PHP可实现以上用法</i></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>回调函数是一种以参数形式传递给另一个函数的函数；如果网站上存在多个AJAX任务，则应该为创建 XMLHttpRequest 对象编写一个标准的函数，并为每个 AJAX 任务调用该函数 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言：当学到JavaScript时，老是有Ajax的名词跳出来，并且参考的案例代码也有$.ajax的词汇频现，这不是逼死个强迫症嘛，在JavaScript基础大致了解后，又看了下Ajax。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web项目" scheme="https://zhouhuiqin.github.io/categories/Web项目/"/>
    
    
    <category term="Python" scheme="https://zhouhuiqin.github.io/tags/Python/"/>
    
    <category term="Django" scheme="https://zhouhuiqin.github.io/tags/Django/"/>
    
    <category term="Ajax" scheme="https://zhouhuiqin.github.io/tags/Ajax/"/>
    
  </entry>
  
  <entry>
    <title>Python Django框架 - JavaScript Ajax jQuery关系梳理</title>
    <link href="https://zhouhuiqin.github.io/2021/06/19/Python%20Django%E6%A1%86%E6%9E%B6%20-%20JavaScript%20Ajax%20jQuery%E5%85%B3%E7%B3%BB%E6%A2%B3%E7%90%86/"/>
    <id>https://zhouhuiqin.github.io/2021/06/19/Python%20Django%E6%A1%86%E6%9E%B6%20-%20JavaScript%20Ajax%20jQuery%E5%85%B3%E7%B3%BB%E6%A2%B3%E7%90%86/</id>
    <published>2021-06-19T08:00:54.000Z</published>
    <updated>2021-07-20T01:23:17.367Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前言：学啊学，忽遇难题。到底JavaScript Ajax jQuery这三者啥关系啥区别呢。那我搭项目时用谁好呢（此处颇有君王选妃之难，hhh)。稍稍梳理好后，发现是自己多想了￣▽￣。</p></blockquote><a id="more"></a><p>Django</p><p>Python</p><p>Bootstrap</p><p>HTML</p><p>CSS</p><hr><p>jQuery与JavaScript与ajax三者的区别与联系<br>简单总结：<br>1、JS是一门前端语言。<br>2、Ajax是一门技术，它提供了异步更新的机制，使用客户端与服务器间交换数据而非整个页面文档，实现页面的局部更新。<br>3、jQuery是一个框架，它对JS进行了封装，使其更方便使用。jQuery使得JS与Ajax的使用更方便</p><p>关系比喻：<br>若把js比作木头，那么jquery就是木板（半成品）<br>jQuery与ajax都是js的一个框架，各有各的功能，若js是父亲的话，jquery与ajax就是两个儿子</p><p>详细情况：<br>1.javascript是一种在客户端执行的脚本语言。ajax是基于javascript的一种技术，它主要用途是提供异步刷新（只刷新页面的一部分，而不是整个页面都刷新）。一个是语言,一个是技术,两者有本质区别.</p><p>2.javascript是一种在浏览器端执行的脚本语言，Ajax是一种创建交互式网页应用的开发技术 ，它是利用了一系列相关的技术其中就包括javascript。</p><p>解释：<br>javaScript是用于Web客户端开发的脚本语言，Ajax是基于JS语言，主要组合JS、CSS、XML三种技术的新技术，是用于创建交互式网页应用的网页开发技术。jQuery是JS的框架，基于JS语言，集合Ajax技术开发出来的JS库，封装JS和Ajax的功能，提供函数接口，大大简化了Ajax，JS的操作。</p><hr><p>JavaScript<br>简介：<br>简写形式就是JS，一种广泛用于客户端Web开发的脚本语言，常用来给HTML网页添加动态功能（其编写的程序可以被嵌入到HTML或XML页面中，并直接在浏览器中解释执行）</p><p>组成：<br>核心（ECMAScript）、文档对象模型（Document Object Model，简称DOM）、浏览器对象模型（Browser Object Model，简称BOM）</p><p>描述：<br>Javascript就是适应动态网页制作的需要而诞生的一种新的编程语言，如今越来越广泛地使用于Internet网页制作上。<br>Javascript的出现使得网页和用户之间实现了一种实时性的、动态的、交互性的关系，使网页包含更多活跃的元素和更加精彩的内容。<br>Javascript短小精悍，又是在客户机上执行的，大大提高了网页的浏览速度和交互能力。同时它又是专门为制作Web网页而量身定做的一种简单的编程语言。</p><p>Ajax<br>简介：<br>即“Asynchronous JavaScript and XML”（异步JavaScript和XML)，AJAX并非缩写词，而是由Jesse James Gaiiett创造的名词，是指一种创建交互式网页应用的网页开发技术</p><p>组成：<br>基于XHTML和CSS标准的表示；<br>使用Document Object Model进行动态显示和交互；<br>使用XML和XSLT做数据交互和操作；<br>使用XML HttpRequest与服务器进行异步通信；<br>使用JavaScript绑定一切</p><p>描述：<br>Ajax是结合了Java技术、XML以及JavaScript等编程技术，可以让开发人员构建基于Java技术的Web应用，并打破了使用页面重载的管理。<br>Ajax技术使用非同步的HTTP请求，在Browser和Web Server之间传递数据，使Browser只更新部分网页内容而不重新载入整个网页。<br>Ajax是使用客户端脚本与Web服务器交换数据的Web应用开发方法。这样，Web页面不用打断交互流程进行重新加裁，就可以动态地更新。使用Ajax，用户可以创建接近本地桌面应用的直接、高可用、更丰富、更动态的Web用户界面</p><p>Ajax应用程序与浏览器和平台无关的！</p><p>jQuery<br>简介<br>是一个快速的，简洁的javaScript库，使用户能更方便地处理HTML documents、events、实现动画效果，并且方便地为网站提供AJAX交互</p><p>特点<br>jQuery是当前很流行的一个JavaScript框架，使用类似于CSS的选择器，可以方便的操作HTML元素，拥有很好的可扩展性，拥有不少插件</p><p>描述<br>对于程序员来说，简化javascript和ajax编程，能够使程序员从设计和书写繁杂的JS应用中解脱出来，将关注点转向功能需求而非实现细节上，从而提高项目的开发速度。<br>对于用户来说，改善了页面的视觉效果，增强了与页面的交互性，体验更绚丽的网页物资。<br>javaScript框架实际上是一系列工具和函数。</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>JavaScript</td><td>前端语言</td><td></td></tr><tr><td>Ajax</td><td>技术</td><td>Asynchronous JavaScript and XML，一种创建交互式网页应用的网页开发技术</td></tr><tr><td>jQuery</td><td>框架</td><td>快速、简洁的JavaScript库，JavaScript框架</td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;前言：学啊学，忽遇难题。到底JavaScript Ajax jQuery这三者啥关系啥区别呢。那我搭项目时用谁好呢（此处颇有君王选妃之难，hhh)。稍稍梳理好后，发现是自己多想了￣▽￣。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web项目" scheme="https://zhouhuiqin.github.io/categories/Web项目/"/>
    
    
    <category term="Python" scheme="https://zhouhuiqin.github.io/tags/Python/"/>
    
    <category term="Django" scheme="https://zhouhuiqin.github.io/tags/Django/"/>
    
    <category term="Ajax" scheme="https://zhouhuiqin.github.io/tags/Ajax/"/>
    
    <category term="JavaScript" scheme="https://zhouhuiqin.github.io/tags/JavaScript/"/>
    
    <category term="jQuery" scheme="https://zhouhuiqin.github.io/tags/jQuery/"/>
    
  </entry>
  
</feed>
